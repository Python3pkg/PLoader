#!/usr/bin/env python3
"""
PLoader - a pure cli-based download manager

"""

from ploader.link_loader import LinkLoader
from ploader.server import Server
import ploader.utils as utils

import asyncore, threading, time, argparse, os
	

def main():
	# setup argparse
	parser = argparse.ArgumentParser(description='CLI download manager written in python')
	parser.add_argument(
		'-f',
		'--config',
		help='Specify path to config',
		default=os.path.join(utils.get_application_dir(), "ploader.conf")
	)
	args = parser.parse_args()
	utils.set_config_path(args.config)

	# setup program
	settings = utils.load_config()

	link_handler = LinkLoader(os.path.join(utils.get_application_dir(), "link_list.ploader"))

	def handle_net_input(data):
		answ = "Thank you"

#		print("Received: " + str(data))
		if "download" in data.keys():
			cur = data["download"]
			link_handler.create_download(cur["name"], cur["links"], cur["passwd"])
			answ = "Added links"

			link_handler.try_download()
		elif "status" in data.keys():
			cur = data["status"]
			answ = str(link_handler)
		elif "config" in data.keys():
			answ = data["config"]

		return answ

	server = Server('0.0.0.0', settings["port"])
	server.set_callback(handle_net_input)

	server = threading.Thread(target = asyncore.loop)
	server.daemon = True
	server.start()
	print("Server running")

	link_handler.try_download()

	server.join() # waits for server to terminate (only happens on user input)


if __name__ == "__main__":
	main()